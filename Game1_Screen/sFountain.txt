
	uniform vec2 iMouse;
	uniform vec2 iResolution;
	uniform float iTime;
	uniform sampler2D iChannel0;
    uniform sampler2D iChannel1;
	

vec4 texCube(in sampler2D tex, in vec3 p) {
    return texture(tex,p.xz*0.5+0.5);
}

float height(in vec2 uv) {
    return texture(iChannel0,uv).x*texture(iChannel1,uv+vec2(0.0,iTime*0.1)).x;
}

const vec2 NE = vec2(0.05,0.0);
vec3 normal(in vec2 uv) {
    return normalize(vec3(height(uv+NE.xy)-height(uv-NE.xy),
                          0.0,
                          height(uv+NE.yx)-height(uv-NE.yx)));
}

const vec4 waterColor = vec4(0.1,0.1,0.32,1.0);
vec3 lightDir = normalize(vec3(10.0,15.0,5.0));

void main(  ) {
    vec2 uv = gl_TexCoord[0].xy;
    uv.y += sin(uv.y*20.0+iTime)*0.02;
    uv.x += sin(uv.y*40.0+iTime)*0.01;

    float h = height(uv);
    vec3 norm = normal(uv);
	gl_FragColor = mix(
        mix(waterColor+waterColor*max(0.0,dot(lightDir,norm))*0.1,
        texture(iChannel0,uv),0.2),
                       texture(iChannel0,norm.xz*0.5+0.5),0.3);
}